) +
geom_point(data=mean_vs_threshold, aes(y=mean_land_cultivated, x=proportion_below_land_threshold))+
geom_smooth(data=mean_vs_threshold,
method="glm",
method.args = list(family = "binomial"),
se=F,
aes(y=mean_land_cultivated, x=proportion_below_land_threshold,group=NULL, color=NULL))+
coord_flip() +
labs(title="Mean Land Cultivated vs Prop of Households with <2ha of Land",
y ="Mean Land Cultivated", x = "Proportion of Households <2ha")
mean_v_threshold_quantiles_poverty$xlow <- mean_v_threshold_quantiles_poverty$mean_land_cultivated_quantile_center-0.25
mean_v_threshold_quantiles_poverty <- mean_vs_threshold %>%
group_by(mean_land_cultivated_quantiles) %>%
summarise(max_vulnerable = max(proportion_below_poverty_threshold),
min_vulnerable = min(proportion_below_poverty_threshold))
mean_v_threshold_quantiles_poverty <- mean_v_threshold_quantiles_poverty %>%
merge(mean_vs_threshold[c("mean_land_cultivated_quantiles","mean_land_cultivated_quantile_center")],
by = "mean_land_cultivated_quantiles", all.x=T, all.y=F)
mean_v_threshold_quantiles_poverty <- mean_v_threshold_quantiles_poverty[duplicated(mean_v_threshold_quantiles_poverty)==F,]
mean_v_threshold_quantiles_poverty$xlow <- mean_v_threshold_quantiles_poverty$mean_land_cultivated_quantile_center-0.25
mean_v_threshold_quantiles_poverty$xhigh <- mean_v_threshold_quantiles_poverty$mean_land_cultivated_quantile_center+0.25
ggplot(
mean_vs_threshold,
aes(x=mean_land_cultivated,y=proportion_below_land_threshold, color=region_afr))+
geom_point()+
geom_smooth(
method="glm",
method.args = list(family = "binomial"),
se=T,
aes(y=proportion_below_land_threshold, x=mean_land_cultivated,group=NULL, color=NULL))+
geom_segment(data=mean_v_threshold_quantiles, mapping=aes(x = xlow, y = max_vulnerable, xend = xhigh, yend = max_vulnerable),  inherit.aes = F) +
geom_segment(data=mean_v_threshold_quantiles, mapping=aes(x = xlow, y = min_vulnerable, xend = xhigh, yend = min_vulnerable),  inherit.aes = F) +
geom_segment(data=mean_v_threshold_quantiles, mapping=aes(x = mean_land_cultivated_quantile_center, y = max_vulnerable, xend = mean_land_cultivated_quantile_center, yend = min_vulnerable),  inherit.aes = F) +
labs(title="Mean Land Cultivated vs Prop of Households with <2ha of Land",
x ="Mean Land Cultivated", y = "Proportion of Households <2ha")
ggplot(
mean_vs_threshold,
aes(x=mean_land_cultivated,y=proportion_below_poverty_threshold, color=region_afr))+
geom_point()+
geom_smooth(
method="glm",
method.args = list(family = "binomial"),
se=T,
aes(y=proportion_below_land_threshold, x=mean_land_cultivated,group=NULL, color=NULL))+
geom_segment(data=mean_v_threshold_quantiles, mapping=aes(x = xlow, y = max_vulnerable, xend = xhigh, yend = max_vulnerable),  inherit.aes = F) +
geom_segment(data=mean_v_threshold_quantiles, mapping=aes(x = xlow, y = min_vulnerable, xend = xhigh, yend = min_vulnerable),  inherit.aes = F) +
geom_segment(data=mean_v_threshold_quantiles, mapping=aes(x = mean_land_cultivated_quantile_center, y = max_vulnerable, xend = mean_land_cultivated_quantile_center, yend = min_vulnerable),  inherit.aes = F) +
labs(title="Mean Land Cultivated vs Prop of Households with <2ha of Land",
x ="Mean Land Cultivated", y = "Proportion of Households <2ha")
ggplot(
mean_vs_threshold,
aes(x=mean_land_cultivated,y=proportion_below_poverty_threshold, color=region_afr))+
geom_point()+
geom_smooth(
method="glm",
method.args = list(family = "binomial"),
se=T,
aes(y=proportion_below_poverty_threshold, x=mean_land_cultivated,group=NULL, color=NULL))+
geom_segment(data=mean_v_threshold_quantiles, mapping=aes(x = xlow, y = max_vulnerable, xend = xhigh, yend = max_vulnerable),  inherit.aes = F) +
geom_segment(data=mean_v_threshold_quantiles, mapping=aes(x = xlow, y = min_vulnerable, xend = xhigh, yend = min_vulnerable),  inherit.aes = F) +
geom_segment(data=mean_v_threshold_quantiles, mapping=aes(x = mean_land_cultivated_quantile_center, y = max_vulnerable, xend = mean_land_cultivated_quantile_center, yend = min_vulnerable),  inherit.aes = F) +
labs(title="Mean Land Cultivated vs Prop of Households with <2ha of Land",
x ="Mean Land Cultivated", y = "Proportion of Households <2ha")
ggplot(mean_vs_threshold,aes(x=mean_vs_threshold))+
geom_hist()
ggplot(mean_vs_threshold,aes(x=mean_vs_threshold))+
geom_histogram()
mean_vs_threshold
ggplot(mean_vs_threshold,aes(x=proportion_below_poverty_threshold))+
geom_histogram()
ggplot(rhomis_no_na,aes(x=ppp_per_mae))+
geom_histogram()
rhomis_no_na$ppp_per_mae
colnames(rhomis_no_na)
mean_vs_threshold <- rhomis_no_na %>%
filter(land_cultivated_ha < quantile(land_cultivated_ha, 0.95, na.rm=T)) %>%
filter(!is.na(ppp_per_mae)) %>%
group_by(GEOID_country) %>%
summarise(
mean_land_cultivated = mean(land_cultivated_ha, na.rm=T),
number_below_2_ha = sum(land_cultivated_ha<2),
quantile_0.1 = quantile(land_cultivated_ha,0.1),
number_of_hh = dplyr::n()) %>%
mutate(
proportion_below_land_threshold = number_below_2_ha/number_of_hh,
)
mean_vs_threshold <- mean_vs_threshold %>% left_join(unique(rhomis_no_na[c("iso_2","GEOID_country","region_afr" )]), by="GEOID_country")
mean_vs_threshold <- bin_and_quantile(mean_vs_threshold,5,"mean_land_cultivated")
mean_vs_threshold <- mean_vs_threshold %>% rename(mean_land_cultivated_quantiles=quantiles)
mean_vs_threshold <- mean_vs_threshold %>% rename(mean_land_cultivated_quantile_center=quantile_center)
mean_vs_threshold <- bin_and_quantile(mean_vs_threshold,5,"proportion_below_land_threshold")
mean_vs_threshold <- mean_vs_threshold %>% rename(proportion_below_threshold_quantiles=quantiles)
mean_vs_threshold <- mean_vs_threshold %>% rename(proportion_below_threshold_quantile_center=quantile_center)
mean_vs_threshold <- mean_vs_threshold[complete.cases(mean_vs_threshold),]
mean_v_threshold_quantiles <- mean_vs_threshold %>%
group_by(mean_land_cultivated_quantiles) %>%
summarise(max_vulnerable = max(proportion_below_land_threshold),
min_vulnerable = min(proportion_below_land_threshold))
mean_v_threshold_quantiles <- mean_v_threshold_quantiles %>%
merge(mean_vs_threshold[c("mean_land_cultivated_quantiles","mean_land_cultivated_quantile_center")],
by = "mean_land_cultivated_quantiles", all.x=T, all.y=F)
mean_v_threshold_quantiles <- mean_v_threshold_quantiles[duplicated(mean_v_threshold_quantiles)==F,]
mean_v_threshold_quantiles$xlow <- mean_v_threshold_quantiles$mean_land_cultivated_quantile_center-0.25
mean_v_threshold_quantiles$xhigh <- mean_v_threshold_quantiles$mean_land_cultivated_quantile_center+0.25
ggplot(
mean_vs_threshold,
aes(x=mean_land_cultivated,y=proportion_below_land_threshold, color=region_afr))+
geom_point()+
geom_smooth(
method="glm",
method.args = list(family = "binomial"),
se=T,
aes(y=proportion_below_land_threshold, x=mean_land_cultivated,group=NULL, color=NULL))+
geom_segment(data=mean_v_threshold_quantiles, mapping=aes(x = xlow, y = max_vulnerable, xend = xhigh, yend = max_vulnerable),  inherit.aes = F) +
geom_segment(data=mean_v_threshold_quantiles, mapping=aes(x = xlow, y = min_vulnerable, xend = xhigh, yend = min_vulnerable),  inherit.aes = F) +
geom_segment(data=mean_v_threshold_quantiles, mapping=aes(x = mean_land_cultivated_quantile_center, y = max_vulnerable, xend = mean_land_cultivated_quantile_center, yend = min_vulnerable),  inherit.aes = F) +
labs(title="Mean Land Cultivated vs Prop of Households with <2ha of Land",
x ="Mean Land Cultivated", y = "Proportion of Households <2ha")
ggplot(
mean_vs_threshold,
aes(x=mean_land_cultivated,y=proportion_below_poverty_threshold, color=region_afr))+
geom_point()+
geom_smooth(
method="glm",
method.args = list(family = "binomial"),
se=T,
aes(y=proportion_below_poverty_threshold, x=mean_land_cultivated,group=NULL, color=NULL))+
geom_segment(data=mean_v_threshold_quantiles, mapping=aes(x = xlow, y = max_vulnerable, xend = xhigh, yend = max_vulnerable),  inherit.aes = F) +
geom_segment(data=mean_v_threshold_quantiles, mapping=aes(x = xlow, y = min_vulnerable, xend = xhigh, yend = min_vulnerable),  inherit.aes = F) +
geom_segment(data=mean_v_threshold_quantiles, mapping=aes(x = mean_land_cultivated_quantile_center, y = max_vulnerable, xend = mean_land_cultivated_quantile_center, yend = min_vulnerable),  inherit.aes = F) +
labs(title="Mean Land Cultivated vs Prop of Households with <2ha of Land",
x ="Mean Land Cultivated", y = "Proportion of Households <2ha")
mean_v_threshold_quantiles
rhomis_df <- readr::read_csv("./data/prepared-data/rhomis-geo-data.csv")
rhomis_df$gps_lat
# Chunk 1: setup
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
# Data Processing Packages
library(jsonlite)
library(readr)
library(dplyr)
library(tibble)
library(rlang)
# Spatial Packages
library(sf)
library(sp)
library(stars)
# Plotting Packages
library(corrplot)
library(ggplot2)
library(ggridges)
library(ggExtra)
library(leaflet)
library(mapview)
# Statistical Analysis Pakcages
library(FactoMineR) # Package for dimensionality reduction
library(factoextra) # Package for dimensionality reduction
library(brms) # Bayesian analysis package
library(rstan) # R package for writing stan models
library(lme4) # Linear, generalised linear, and nonlinear mixed models
library(mgcv) # Package for GAMs
library(lqmm) # Linear Quatile Mixed Models (Hierarchical Quantile)
library(quantreg) # Quantile Regression
library(bamlss) # Bayesian Additive Models for Location Scale and Shape
library(moments) # Package for skewness
library(sn) # Function for generating data from a skew normal distribution
library(s2)
library(PerformanceAnalytics) # Library for plotting density and correlations
sf_use_s2(FALSE)
firstup <- function(x) {
substr(x, 1, 1) <- toupper(substr(x, 1, 1))
x
}
bin_and_quantile <- function(dat, bin_number, column){
quantiles <- quantile(dat[column], seq(0,1,1/bin_number), na.rm=T)
x_gt_cond <- quantiles[1:(length(quantiles)-1)]
x_ls_cond <- quantiles[2:length(quantiles)]
x_quarts <- paste0("q",c(1:bin_number))
middles <- (x_gt_cond + x_ls_cond)/2
cases <- paste0(column,' >= ', x_gt_cond, ' &', column ,'< ', x_ls_cond, ' ~ "', x_quarts, '"')
cases[length(cases)] <- gsub("<", "<=", cases[length(cases)])
dat <- dat %>% mutate(quantiles = dplyr::case_when(!!!rlang::parse_exprs(cases)))
conversion_table <- tibble::as_tibble(
list(
quantile_name = x_quarts,
quantile_center = as.numeric(middles)
)
)
dat <- dat %>% left_join(conversion_table, by = c("quantiles"="quantile_name"))
dat$quantiles <- factor(dat$quantiles, levels=x_quarts, ordered=T)
return(dat)
}
# Chunk 2: load_data
rhomis_df <- readr::read_csv("./data/prepared-data/rhomis-geo-data.csv")
rhomis_df$gps_lat
# Here we create a "geographic copy" of the dataset
rhomis_geo_data <- sf::st_as_sf(x = rhomis_df, wkt = "geometry")
rhomis_geo_data <- rhomis_geo_data[rhomis_geo_data$iso_3!="NER",]
sf::st_crs(rhomis_geo_data) <- "+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0"
# IPUMS GEO2 level dataset
ipums_df <- readr::read_csv("./data/prepared-data/ipums-all.csv")
ipums_geo <- sf::st_as_sf(x = ipums_df, wkt = "geometry")
ipums_geo <- ipums_geo[ipums_geo$iso_3!="NER",]
sf::st_crs(ipums_geo) <- "+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0"
ipums_geo$geometry <- ipums_geo$geometry %>%
# s2::s2_rebuild() %>%
sf::st_simplify(dTolerance = 0.05)
# lsms_all <- readr::read_csv("./data/prepared-data/lsms-all.csv")
# There are a lot of variables to examine in the dataset,
# in this file we have organised them into categories
variable_categories <- jsonlite::read_json("./data/variable-categorisation.json")
world_all <- readr::read_csv("./data/prepared-data/world-shapefile.csv")
world_all <- sf::st_as_sf(x = world_all, wkt = "geometry")
# Metadata
pop_data <- readr::read_csv("./data/pop_variables.csv")
raster_data <- readr::read_csv("./data/raster_variables.csv")
modis_land_cover <- readr::read_csv("./data/earth-engine/modis_land_cover/land_cover_per_region_ipums.csv")
# Chunk 3: PPP
#There are many indicators in the RHoMIS dataset, however, we might want to
#compute some further indicators.
#All of the income units come in local currency units. I would like currencies to
#be internationally comparable, so I am going to change them to PPP$ (purchasing
#power parity).
income_columns_lcu <- c(
"crop_income_lcu_per_year",
"livestock_income_lcu_per_year",
"total_income_lcu_per_year",
"off_farm_income_lcu_per_year",
"value_crop_consumed_lcu_per_hh_per_year",
"value_livestock_products_consumed_lcu_per_hh_per_year",
"value_farm_products_consumed_lcu_per_hh_per_year"
)
income_columns_ppp <- gsub("lcu", "ppp", income_columns_lcu)
rhomis_df[income_columns_ppp] <- rhomis_df[income_columns_lcu]/rhomis_df$currency_conversion_lcu_to_ppp
# Population columns came in form of totals
# Convert these into percentages for comparison
# between locations
population_columns_percentage <- paste0(
variable_categories$ipums$population_columns,
"_perc"
)
ipums_df[population_columns_percentage] <- 100*ipums_df[unlist(variable_categories$ipums$population_columns)]/ipums_df$TOTPOP_GEO2A
rhomis_df[population_columns_percentage] <- 100*rhomis_df[unlist(variable_categories$ipums$population_columns)]/rhomis_df$TOTPOP_GEO2A
# There are duplicate GEOID's by country, so need to create country specific IDs
ipums_df$GEOID_country <- paste0(ipums_df$GEOID, "_" ,ipums_df$iso_2)
rhomis_df$GEOID_country <- paste0(rhomis_df$GEOID, "_" ,rhomis_df$iso_2)
# It can be useful, for exploration, to understand the
# different countries by region.
region_table <- tibble::as_tibble(
list(
"iso_2"=c("BF",
"ET",
"GH",
"KE",
"ML",
"NG",
"RW",
"TZ",
"UG"),
"region_afr"=c("west_africa",
"east_africa",
"west_africa",
"east_africa",
"west_africa",
"west_africa",
"central_africa",
"east_africa",
"east_africa"
)
)
)
ipums_df <- ipums_df %>% left_join(region_table, by = "iso_2")
rhomis_df <- rhomis_df %>% left_join(region_table, by = "iso_2")
# Chunk 4: leaflet_map
mapviewOptions(fgb = FALSE) # needed when creating web pages
# mapview(ipums_geo,fgb = FALSE, basemaps="OpenStreetMap.Mapnik")
map <- mapview(rhomis_geo_data$geometry, alpha=0.5, col.regions="black",color="white", burst=T)+
mapview(ipums_geo$geometry,
alpha=1,
color="black",
col.regions = "green",
alpha.regions=0.3, burst=T)
map
# Chunk 6
par(mar = c(4, 4, .1, .1))
households_per_country <- rhomis_df %>%
filter(!is.na(iso_2)) %>%
group_by(iso_2) %>%
summarise(
number_of_households=dplyr::n()
)
households_per_country <- households_per_country %>% left_join(region_table, by="iso_2")
ggplot(households_per_country, aes(x=iso_2, y=number_of_households, fill=region_afr))+
geom_bar(stat="identity")+
labs(title="Number of RHoMIS Surveys by Country",
x ="ISO Country Code", y = "Number RHoMIS Surveys")
areas_in_rhomis <- ipums_df %>%
# Select columns
select(c("iso_2", "GEOID_country", "GEO2LABEL")) %>%
# Add a True/False column, whether the GEOID is in RHoMIS
mutate(
in_rhomis = ipums_df$GEOID_country %in% rhomis_df$GEOID_country,
) %>%
group_by(iso_2) %>%
# Get the country summary of number of areas, and nuber of rhomis areas
summarise(
number_of_GEO2=dplyr::n(),
GEO2_with_rhomis=sum(in_rhomis==T)
) %>%
# Calculate the percentage of areas covered
mutate(
coverage = 100*GEO2_with_rhomis/number_of_GEO2,
)
areas_in_rhomis <- areas_in_rhomis %>% left_join(region_table, by="iso_2")
ggplot(areas_in_rhomis, aes(x=iso_2, y=coverage, fill=region_afr))+
geom_bar(stat="identity")+
labs(title="Percentage of GEO2 Areas Containing RHoMIS Surveys",
x ="ISO Country Code", y = "Percentage of Areas with RHoMIS Surveys")
# knitr::kable(areas_in_rhomis)
# stats_per_area <- rhomis_df %>%
#   group_by(iso_2, GEO2LABEL) %>%
#   summarise(
#     households_per_area=dplyr::n()
#   ) %>%
#   group_by(iso_2) %>%
#   summarise(
#     hh_per_geo2_mean=mean(households_per_area),
#     hh_per_geo2_lq=quantile(households_per_area, 0.25, na.rm=T),
#     hh_per_geo2_median=quantile(households_per_area, 0.5, na.rm=T),
#     hh_per_geo2_uq=quantile(households_per_area, 0.75, na.rm=T),
#     hh_per_geo2_iqr=IQR(households_per_area, 0.75, na.rm=T),
#
#     hh_per_geo2_sd=sd(households_per_area)
#
#   )
stats_per_area <- rhomis_df %>%
filter(!is.na(iso_2))%>%
group_by(iso_2, GEO2LABEL) %>%
summarise(
households_per_area=dplyr::n()
)
stats_per_area <- stats_per_area %>% left_join(region_table, by="iso_2")
ggplot(stats_per_area, aes(x=iso_2, y=households_per_area, fill=region_afr))+
geom_violin(scale="width")+
labs(title="Number of RHoMIS Surveys in GEO2 Households",
x ="ISO Country Code", y = "Number of Households in Area")
# Chunk 7: land_size_1
rhomis_no_na <- rhomis_df %>%
filter(!is.na(iso_2)) %>%
filter(!is.na(land_cultivated_ha)) %>%
filter(total_income_ppp_per_year>=0)
rhomis_no_na <- bin_and_quantile(rhomis_no_na, 10, "land_cultivated_ha")
rhomis_no_na <- rhomis_no_na %>% rename(land_quantiles=quantiles)
rhomis_no_na <- rhomis_no_na %>% rename(land_quantile_centers=quantile_center)
ggplot(rhomis_no_na, aes(x=land_quantiles, y=total_income_ppp_per_year)) +
geom_violin(scale="width")+
scale_y_continuous(limits = quantile(rhomis_no_na$total_income_ppp_per_year, c(0, 0.8), na.rm = T))+
labs(title="Total Income for 10 Land Size Quantiles",
x ="Land Size Quantile", y = "Total Household Income (PPP$/Year)")
rhomis_no_na$livestock_tlu[rhomis_no_na$livestock_tlu<0] <- NA
ggplot(rhomis_no_na, aes(x=land_quantiles, y=livestock_tlu)) +
geom_violin(scale="width")+
scale_y_continuous(limits = quantile(rhomis_no_na$livestock_tlu, c(0, 0.9), na.rm = T))+
labs(title="Livestock TLU for 10 Land Size Quantiles",
x ="Land Size Quantile", y = "Livestock TLU")
# Chunk 8: land_size_2
ggplot(rhomis_no_na, aes(x=iso_2, y=land_cultivated_ha, fill=region_afr))+
geom_violin(scale="width")+
scale_y_continuous(limits = quantile(rhomis_df$land_cultivated_ha, c(0, 0.95), na.rm = T))+
labs(title="Land Cultivated (ha) per Country",
x ="ISO Country Code", y = "Land Cultivated (ha)")
# Chunk 9: land_size_3
land_size_stats <- rhomis_no_na %>%
group_by(GEOID_country) %>%
summarise(
mean_land_cultivated_ha = mean(land_cultivated_ha, na.rm=T),
sd_land_cultivated_ha = stats::sd(land_cultivated_ha, na.rm=T),
median_land_cultivated_ha = median(land_cultivated_ha, na.rm=T),
iqr_land_cultivated_ha = IQR(land_cultivated_ha, na.rm=T),
skew_land_cultivated_ha = moments::skewness(land_cultivated_ha, na.rm=T),
kurtosis_land_cultivated_ha = moments::kurtosis(land_cultivated_ha, na.rm=T)
)
land_size_stats$coeff_of_variation <- land_size_stats$sd_land_cultivated_ha/land_size_stats$mean_land_cultivated_ha
land_size_stats$quartcoeff_of_variation <- land_size_stats$iqr_land_cultivated_ha/land_size_stats$median_land_cultivated_ha
land_size_stats <- land_size_stats %>% left_join(unique(rhomis_no_na[c("iso_2","GEOID_country","region_afr" )]), by="GEOID_country")
ggplot(land_size_stats, aes(x=mean_land_cultivated_ha, y=coeff_of_variation, color=region_afr))+
geom_point()+
scale_y_continuous(limits = quantile(land_size_stats$coeff_of_variation, c(0, 0.95), na.rm = T))+
scale_x_continuous(limits = quantile(land_size_stats$mean_land_cultivated_ha, c(0, 0.95), na.rm = T))+
labs(title="Mean Land Cultivated vs Coefficient of Variation\nper GEOID (Subnational Level 2)",
x ="Mean Land Cultivated (ha)", y = "Std Dev Land Cultivated", color="Country")
ggplot(land_size_stats, aes(x=median_land_cultivated_ha, y=quartcoeff_of_variation, color=region_afr))+
geom_point()+
scale_y_continuous(limits = quantile(land_size_stats$quartcoeff_of_variation, c(0, 0.95), na.rm = T))+
scale_x_continuous(limits = quantile(land_size_stats$median_land_cultivated_ha, c(0, 0.95), na.rm = T))+
labs(title="Median Cultivated vs Quartile Based Coefficient of Variation \nper GEOID (Subnational Level 2)",
x ="Median Land Cultivated (ha)", y = "IQR Land Cultivated", color="Country")
ggplot(land_size_stats, aes(x=skew_land_cultivated_ha))+
geom_histogram(fill="dodgerblue4", color="black", size=0.5)+
scale_x_continuous(limits = quantile(land_size_stats$skew_land_cultivated_ha, c(0, 0.95), na.rm = T))+
labs(title="Skewness of Land Cultivated per GEOID",
x ="Skewness", y = "Frequency")
ggplot(land_size_stats, aes(x=kurtosis_land_cultivated_ha))+
geom_histogram(fill="dodgerblue4", color="black", size=0.5)+
scale_x_continuous(limits = quantile(land_size_stats$kurtosis_land_cultivated_ha, c(0, 0.95), na.rm = T))+
labs(title="Kurtosis of Land Cultivated per GEOID",
x ="Kurtosis", y = "Frequency")
mean_vs_threshold <- rhomis_no_na %>%
filter(land_cultivated_ha < quantile(land_cultivated_ha, 0.95, na.rm=T)) %>%
filter(!is.na(ppp_per_mae)) %>%
group_by(GEOID_country) %>%
summarise(
mean_land_cultivated = mean(land_cultivated_ha, na.rm=T),
number_below_2_ha = sum(land_cultivated_ha<2),
quantile_0.1 = quantile(land_cultivated_ha,0.1),
number_of_hh = dplyr::n()) %>%
mutate(
proportion_below_land_threshold = number_below_2_ha/number_of_hh,
)
rhomis_no_na$ppp
mean_vs_threshold <- rhomis_no_na %>%
filter(land_cultivated_ha < quantile(land_cultivated_ha, 0.95, na.rm=T)) %>%
group_by(GEOID_country) %>%
summarise(
mean_land_cultivated = mean(land_cultivated_ha, na.rm=T),
number_below_2_ha = sum(land_cultivated_ha<2),
quantile_0.1 = quantile(land_cultivated_ha,0.1),
number_of_hh = dplyr::n()) %>%
mutate(
proportion_below_land_threshold = number_below_2_ha/number_of_hh,
)
mean_vs_threshold <- mean_vs_threshold %>% left_join(unique(rhomis_no_na[c("iso_2","GEOID_country","region_afr" )]), by="GEOID_country")
mean_vs_threshold <- bin_and_quantile(mean_vs_threshold,5,"mean_land_cultivated")
mean_vs_threshold <- mean_vs_threshold %>% rename(mean_land_cultivated_quantiles=quantiles)
mean_vs_threshold <- mean_vs_threshold %>% rename(mean_land_cultivated_quantile_center=quantile_center)
mean_vs_threshold <- bin_and_quantile(mean_vs_threshold,5,"proportion_below_land_threshold")
mean_vs_threshold <- mean_vs_threshold %>% rename(proportion_below_threshold_quantiles=quantiles)
mean_vs_threshold <- mean_vs_threshold %>% rename(proportion_below_threshold_quantile_center=quantile_center)
mean_vs_threshold <- mean_vs_threshold[complete.cases(mean_vs_threshold),]
# subset <- mean_vs_threshold[mean_vs_threshold$mean_land_cultivated_quantile_center <quantile(mean_vs_threshold$mean_land_cultivated, 0.95, na.rm = T),]
# ggplot(
#   subset,
#   aes(x=mean_land_cultivated,y=proportion_below_threshold_quantile_center, group=proportion_below_threshold_quantile_center, color=region_afr))+
#        stat_density_ridges(bandwidth = 1, quantiles = 4) +
#     geom_point(data=subset, aes(x=mean_land_cultivated, y=proportion_below_threshold))+
#
#    coord_flip() +
#
#   labs(title="Mean Land Cultivated vs Prop of Households with <2ha of Land",
#          x ="Mean Land Cultivated", y = "Proportion of Households <2ha")
# model <- glm(proportion_below_threshold ~mean_land_cultivated,family=binomial(link='logit'),data=mean_vs_threshold)
# summary(model)
#
# anova(model, test="Chisq")
mean_v_threshold_quantiles <- mean_vs_threshold %>%
group_by(mean_land_cultivated_quantiles) %>%
summarise(max_vulnerable = max(proportion_below_land_threshold),
min_vulnerable = min(proportion_below_land_threshold))
mean_v_threshold_quantiles <- mean_v_threshold_quantiles %>%
merge(mean_vs_threshold[c("mean_land_cultivated_quantiles","mean_land_cultivated_quantile_center")],
by = "mean_land_cultivated_quantiles", all.x=T, all.y=F)
mean_v_threshold_quantiles <- mean_v_threshold_quantiles[duplicated(mean_v_threshold_quantiles)==F,]
mean_v_threshold_quantiles$xlow <- mean_v_threshold_quantiles$mean_land_cultivated_quantile_center-0.25
mean_v_threshold_quantiles$xhigh <- mean_v_threshold_quantiles$mean_land_cultivated_quantile_center+0.25
ggplot(
mean_vs_threshold,
aes(x=mean_land_cultivated,y=proportion_below_land_threshold, color=region_afr))+
geom_point()+
geom_smooth(
method="glm",
method.args = list(family = "binomial"),
se=T,
aes(y=proportion_below_land_threshold, x=mean_land_cultivated,group=NULL, color=NULL))+
geom_segment(data=mean_v_threshold_quantiles, mapping=aes(x = xlow, y = max_vulnerable, xend = xhigh, yend = max_vulnerable),  inherit.aes = F) +
geom_segment(data=mean_v_threshold_quantiles, mapping=aes(x = xlow, y = min_vulnerable, xend = xhigh, yend = min_vulnerable),  inherit.aes = F) +
geom_segment(data=mean_v_threshold_quantiles, mapping=aes(x = mean_land_cultivated_quantile_center, y = max_vulnerable, xend = mean_land_cultivated_quantile_center, yend = min_vulnerable),  inherit.aes = F) +
labs(title="Mean Land Cultivated vs Prop of Households with <2ha of Land",
x ="Mean Land Cultivated", y = "Proportion of Households <2ha")
## Density ridges plot
# ggplot(
#   mean_vs_threshold,
#   aes(x=proportion_below_land_threshold,y=mean_land_cultivated_quantile_center, group=mean_land_cultivated_quantile_center, color=region_afr))+
#   stat_density_ridges(bandwidth = 0.07,
#                       scale = 0.5,
#                       size = 0.25,
#                       rel_min_height = 0.04
#   ) +
#   geom_point(data=mean_vs_threshold, aes(y=mean_land_cultivated, x=proportion_below_land_threshold))+
#   geom_smooth(data=mean_vs_threshold,
#               method="glm",
#               method.args = list(family = "binomial"),
#               se=F,
#               aes(y=mean_land_cultivated, x=proportion_below_land_threshold,group=NULL, color=NULL))+
#
#   coord_flip() +
#
#   labs(title="Mean Land Cultivated vs Prop of Households with <2ha of Land",
#        y ="Mean Land Cultivated", x = "Proportion of Households <2ha")
#
# ggplot(mean_vs_threshold, aes(x=mean_land_cultivated, y=quantile_0.1, color=region_afr))+
#   geom_point() +
#   geom_smooth(method="lm")+
#   # scale_y_continuous(limits =  c(0, 1))+
#   scale_x_continuous(limits = quantile(mean_vs_threshold$mean_land_cultivated, c(0, 0.95), na.rm = T))+
#   labs(title="Mean Land Cultivated vs Quantile 0.1 (lowest 10%)",
#        x ="Mean Land Cultivated", y = "10th Quantile")
rmarkdown::render("./heterogeneity-analysis.Rmd")
warnings()
?rmarkdown::render
rmarkdown::render("./heterogeneity-analysis.Rmd", output_dir = "markdown-outputs", output_file = "index.html")
rhomis_df
unique(rhomis_df$GEOID_country)
